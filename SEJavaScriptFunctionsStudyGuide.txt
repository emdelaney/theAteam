Software Engineering

JavaScript Functions & Methods Study Guide
Read Chapters 4 - 6, up to but not including the section entitled, “Polymorphism.”


1. Suppose you have the following object.  Use . notation and square brackets to access the value for airline property.

var flight = { 

   airline : "Oceanic",

   number : 815

};

		var al = flight.airline;
		var al = flight[airline];

1. What does the join() method do?

		join() can be used to flatten an array of strings into a single string.

2. What does the push() method do?

		The push() method adds an item to the end of an array;

3. What happens when JavaScript reads an object property that doesn’t exist?

		Instead of failing without grace, it simply returns undefined.

4. What does the delete operator do?

		The delete operator deletes a property from an object.

5. Are JavaScript arrays objects?

		Yes, they are just a type of object that is used for a specific purpose. Objects in JS
		are just "arrays" of key-value pairs.

6. Suppose you have this code.  


var object1 = {value: 10};
var object2 = object1;


If I execute this code, does object1 also change?


object2.value = 11;

		Yes, object1.value is changed to 11 because the variables are references
		to the same object in memory, similar to regular Java.


1. In statistics, what is the phi coefficient?

		The phi coefficient is used to measure the correlation between two variables,
		meaning the relation of the change in one variable to another.

2. Does a small phi coefficient convey correlation between two events?

		If by small, you mean close to zero, then no.

3. Chapter 4 introduces the map data structure.  Describe this data structure.

		The map data structure is just an abstraction from a general JS object that acts
		in a similar way (to the user) to a hash table. You input values by that value's unique key
		and you retrieve values by the value's key.

4. What do the shift and unshift methods do?

		The shift and unshift methods insert and remove values from the front of an array.

5. What is the arguments object?

		The arguments object is an object that is available when a function is running that holds
		all of that function's arguments. It is useful because you can pass more or less arguments to a
		function than its signature suggests.

 It has to become second nature, for a programmer, to notice when a concept is begging to be abstracted into a new word.


1. What is the purpose of forEach()?

		The forEach() function allows one to apply any action to each value in an array.

2. What are higher order functions?

		Higher order functions is a concept that is the combination of functions being passed as values
		and allowing nested functions. They both must exist. Essentially, this allows you to create general functions,
		where specific actions can be filled in as functions that are passed as arguments. 

3. What is JSON?

		JSON, or JavaScript Object Notation, is a simple format for storing data that is similar
		to objects in JavaScript, with just a list of key-value pairs.

4. Suppose I have the following variable.  How might I convert it to a JSON object?


var s = ‘{"name":"X","born":1980}’;

		It is already a JSON-encoded object.

1. What is the purpose of reduce()?

		The reduce() function takes an array, performs an action on each element, 
		and produces a single element as a result of those actions.

1.  Exercise from Chapter 5: Use the reduce method in combination with the concat method to “flatten” an array of arrays into a single array that has all the elements of the input arrays.
		var arrays = [[1, 2, 3], [4, 5], [6]];
		// Your code here.
		var single = arrays.reduce(function(a, b) {
		  return a.concat(b);
		});

		// → [1, 2, 3, 4, 5, 6]

1. What is an Object prototype?

		An object prototype is like a parent class in Java, in that the JavaScript object "inherits"
		a set of properties from the prototype.

2. What is one reason to override a prototype in a JavaScript object?

		You might want an object that contains only the properties that you have defined and no others. Maybe
		someone has modified the prototype to include prototypes that we really don't want. For example,
		maybe we don't want a toString property.