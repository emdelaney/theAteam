2nd Exercise, Chapter 5

	function average(array) {
	  function plus(a, b) { return a + b; }
	  return array.reduce(plus) / array.length;
	}

	var byName = {};
	ancestry.forEach(function(person) {
	  byName[person.name] = person;
	});

	// Your code here.
	var hasMother = [];
	hasMother = ancestry.filter(function(person) {
	  return person.mother in byName;
	});

	var ages = [];
	for(i = 0; i < hasMother.length; i++) {
		 ages.push(hasMother[i].born - byName[hasMother[i].mother].born);
	}

	console.log(average(ages));

3rd Exercise, Chapter 5

	function average(array) {
	  function plus(a, b) { return a + b; }
	  return array.reduce(plus) / array.length;
	}

	// Your code here.
	var ancestry = JSON.parse(ANCESTRY_FILE);

	function groupBy(array, grouper) {
	  var map = {};
	  for(i = 0; i < array.length; ++i) {
		var cent = grouper(array[i]);
		if(!(cent in map)) {
			map[cent] = []; 
		}
		map[cent].push(array[i].died - array[i].born);
	  }
	  return map;
	}

	var centuryBuckets = groupBy(ancestry, function(person) {
	  return Math.ceil(person.died / 100);
	});

	for(var century in centuryBuckets) {
	  console.log(century + ": " + average(centuryBuckets[century])); 
	}

